[{"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\index.js":"1","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\App.js":"2","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\ActionProvider.js":"4","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\MessageParser.js":"5","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\config.js":"6","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\WikipediaAPI.js":"7","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\components\\WikiApp.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":483,"mtime":1606469674160,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1922,"mtime":1606530549116,"results":"13","hashOfConfig":"10"},{"size":770,"mtime":1606531477794,"results":"14","hashOfConfig":"10"},{"size":217,"mtime":1606497851292,"results":"15","hashOfConfig":"10"},{"size":1136,"mtime":1606486052534,"results":"16","hashOfConfig":"10"},{"size":132,"mtime":1606489227299,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"quli3b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\index.js",[],["37","38"],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\App.js",[],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\ActionProvider.js",["39","40","41"],"\r\nimport React, {useState,useEffect} from 'react';\r\nconst fetch = require('node-fetch');\r\nclass ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    dictionarySend=(word)=>{\r\n       fetch('https://api.dictionaryapi.dev/api/v2/entries/en/hello').then(res => res.json()).then(json =>  this.addMessageToBotState(this.createChatBotMessage(\r\n        json[0][\"meanings\"][0][\"definitions\"][0][\"definition\"]\r\n       )));     \r\n      \r\n    }\r\n\r\n    wikiSend=(word)=>{\r\n      \r\n      fetch( `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&origin=*&formatversion=2&exintro&explaintext&redirects=1&titles=Stack%20Overflow `).then(res => res.json()).then(json =>\r\n      {\r\n        let getData = json[\"query\"][\"pages\"]\r\n      \r\n      let keys = Object.keys(getData)\r\n      \r\n      this.addMessageToBotState(this.createChatBotMessage(getData[keys][\"extract\"]))\r\n      }\r\n      )\r\n     \r\n   }\r\n\r\n\r\n\r\n\r\n    handleDefault = (name) => {\r\n      fetch('https://api.dictionaryapi.dev/api/v2/entries/en/').then(res => res.json()).then(json => console.log(json));\r\n      \r\n      \r\n      const message = this.createChatBotMessage(name, {\r\n          withAvatar: true,\r\n        });\r\n        \r\n        this.addMessageToBotState(message)\r\n      };\r\n      // this will add the component \r\n      addMessageToBotState = (messages) => {\r\n        if (Array.isArray(messages)) {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            messages: [...state.messages, ...messages],\r\n          }));\r\n        } else {\r\n          this.setState((state) => ({\r\n            ...state,\r\n            messages: [...state.messages, messages],\r\n          }));\r\n        }\r\n      };\r\n  }\r\n  \r\n  export default ActionProvider;","C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\MessageParser.js",[],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\config.js",[],["42","43"],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\WikipediaAPI.js",["44","45"],"C:\\Users\\MY-PC\\teamC301\\my-app\\src\\configs\\components\\WikiApp.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"55","line":2,"column":25,"nodeType":"52","messageId":"53","endLine":2,"endColumn":34},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","replacedBy":"57"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},{"ruleId":"50","severity":1,"message":"58","line":7,"column":12,"nodeType":"52","messageId":"53","endLine":7,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.",["59"],["60"],"'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]